// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  role      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  licenses  License[]
  orders    Order[]
  registrations EventRegistration[]
}

model Event {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  date        DateTime
  location    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  registrations EventRegistration[]
}

model Order {
  id         Int      @id @default(autoincrement())
  userId     Int
  user       User     @relation(fields: [userId], references: [id])
  total      Float
  status     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  shipments  Shipment[]
}

model License {
  id         Int      @id @default(autoincrement())
  userId     Int
  user       User     @relation(fields: [userId], references: [id])
  type       String
  status     String
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model EventRegistration {
  id         Int      @id @default(autoincrement())
  eventId    Int
  event      Event   @relation(fields: [eventId], references: [id])
  userId     Int
  user       User    @relation(fields: [userId], references: [id])
  status     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Shipment {
  id         Int      @id @default(autoincrement())
  orderId    Int
  order      Order   @relation(fields: [orderId], references: [id])
  trackingId String
  status     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
